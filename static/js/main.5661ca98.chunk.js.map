{"version":3,"sources":["components/Header.js","util/apiOperations.js","components/Loader.js","components/CommentForm.js","util/converter.js","util/sanitizer.js","pages/PostView.js","components/PostList.js","pages/HomeView.js","pages/AboutView.js","App.js","index.js"],"names":["Header","props","Navbar","className","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","apiBase","a","axios","get","postid","data","post","Loader","handleSubmit","e","preventDefault","target","elements","owner","text","postComment","value","then","window","location","reload","CommentForm","Form","onSubmit","action","method","Group","controlId","Label","Control","name","type","required","maxLength","autoComplete","as","Button","validTypes","conversionHandlers","paragraph","block","header","level","list","tag","style","items","forEach","item","image","url","caption","embed","width","height","convertToHTML","blocks","final","result","includes","convertBlockToHTML","options","whiteList","xss","iframe","boundXSS","PostView","useParams","useState","comments","setComments","showForm","setShowForm","setPost","converted","setConverted","posts","loading","useEffect","length","matchingPost","find","_id","hash","parsedJSON","JSON","parse","json","sanitizer","getComments","newComments","catch","err","response","status","Container","fluid","title","Date","createdAt","toLocaleDateString","dangerouslySetInnerHTML","__html","onClick","map","comment","Card","Body","Title","PostList","Subtitle","HomeView","AboutView","App","setPosts","setLoading","getPosts","newPosts","finally","path","exact","to","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5661ca98.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <Navbar className={props.className + ''} variant=\"light\" expand=\"md\">\r\n      <Navbar.Brand href=\"#/home\">\r\n        <h1>☀⛱Blog</h1>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"header-navbar\" />\r\n      <Navbar.Collapse id=\"header-navbar\">\r\n        <Nav className=\"ml-auto main-navigation\">\r\n          <Nav.Link className=\"px-3\" href=\"#/home\">\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link className=\"px-3\" href=\"#/about\">\r\n            About\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nconst apiBase =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:3000/blog/post'\r\n    : 'https://summer-blog-api.herokuapp.com/blog/post';\r\n\r\nasync function getPosts() {\r\n  return await axios.get(apiBase);\r\n}\r\n\r\nasync function getComments(postid) {\r\n  return await axios.get(`${apiBase}/${postid}/comment`);\r\n}\r\n\r\nasync function postComment(postid, data) {\r\n  return await axios.post(`${apiBase}/${postid}/comment`, data);\r\n}\r\n\r\nexport { getPosts, getComments, postComment };\r\n","import './Loader.css';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"lds-roller\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { postComment } from '../util/apiOperations';\r\n\r\nfunction handleSubmit(e, id) {\r\n  e.preventDefault();\r\n\r\n  let { owner, text } = e.target.elements;\r\n  owner = owner.value;\r\n  text = text.value;\r\n\r\n  postComment(id, { owner, text }).then(() => {\r\n    window.location.reload();\r\n  });\r\n}\r\n\r\nfunction CommentForm(props) {\r\n  let { id } = props;\r\n  return (\r\n    <Form\r\n      className=\"border-bottom pb-3\"\r\n      onSubmit={(e) => {\r\n        handleSubmit(e, id);\r\n      }}\r\n      action={`http://localhost:3000/blog/post/${id}/comment`}\r\n      method=\"POST\"\r\n    >\r\n      <Form.Group controlId=\"formName\">\r\n        <Form.Label>Your name</Form.Label>\r\n        <Form.Control\r\n          name=\"owner\"\r\n          type=\"text\"\r\n          required\r\n          maxLength=\"20\"\r\n          autoComplete=\"off\"\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formMessage\">\r\n        <Form.Label>Message</Form.Label>\r\n        <Form.Control\r\n          name=\"text\"\r\n          className=\"new-comment-textarea\"\r\n          as=\"textarea\"\r\n          required\r\n          maxLength=\"255\"\r\n          autoComplete=\"off\"\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default CommentForm;\r\n","const validTypes = ['header', 'image', 'embed', 'list', 'paragraph'];\r\n\r\nfunction handleParagraph(block) {\r\n  let data = block.data;\r\n\r\n  return `<p>${data.text}<p>`;\r\n}\r\n\r\nfunction handleHeader(block) {\r\n  let data = block.data;\r\n\r\n  return `<h${data.level}>${data.text}</h${data.level}>`;\r\n}\r\n\r\nfunction handleList(block) {\r\n  let data = block.data;\r\n\r\n  let tag = data.style === 'ordered' ? 'ol' : 'ul';\r\n  let items = '';\r\n  data.items.forEach((item) => {\r\n    items += `<li>${item}</li>`;\r\n  });\r\n\r\n  return `<${tag}>${items}</${tag}>`;\r\n}\r\n\r\nfunction handleImage(block) {\r\n  let data = block.data;\r\n\r\n  return `<figure><img src=\"${data.url}\"/><figcaption>${data.caption}</figcaption></figure>`;\r\n}\r\n\r\nfunction handleEmbed(block) {\r\n  let data = block.data;\r\n\r\n  return `<iframe width=\"${data.width}\" height=\"${data.height}\" src=\"${data.embed}\" frameborder=\"0\" allowfullscreen></iframe>`;\r\n}\r\n\r\nconst conversionHandlers = {\r\n  paragraph: handleParagraph,\r\n  header: handleHeader,\r\n  list: handleList,\r\n  image: handleImage,\r\n  embed: handleEmbed,\r\n};\r\n\r\nfunction convertBlockToHTML(block) {\r\n  if (typeof block !== 'object') return;\r\n  if (!('id' in block && 'type' in block && 'data' in block)) return;\r\n\r\n  if (!validTypes.includes(block.type)) return;\r\n\r\n  let result = conversionHandlers[block.type](block);\r\n\r\n  return result;\r\n}\r\n\r\nfunction convertToHTML(blocks) {\r\n  let final = '';\r\n  blocks.forEach((block) => {\r\n    let result = convertBlockToHTML(block);\r\n    final += result;\r\n  });\r\n\r\n  return final;\r\n}\r\n\r\nexport default convertToHTML;\r\n","import xss from 'xss';\r\n\r\nlet options = {\r\n  whiteList: {\r\n    ...xss.whiteList,\r\n    iframe: ['width', 'height', 'src', 'frameborder', 'allowfullscreen'],\r\n  },\r\n};\r\n\r\nlet boundXSS = (value) => {\r\n  return xss(value, options);\r\n};\r\n\r\nexport default boundXSS;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Loader from '../components/Loader';\r\nimport CommentForm from '../components/CommentForm';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { getComments } from '../util/apiOperations';\r\nimport convertToHTML from '../util/converter';\r\nimport sanitizer from '../util/sanitizer';\r\n\r\nfunction PostView(props) {\r\n  let { id } = useParams();\r\n  let [comments, setComments] = useState([]);\r\n  let [showForm, setShowForm] = useState(false);\r\n\r\n  let [post, setPost] = useState(null);\r\n  let [converted, setConverted] = useState('');\r\n\r\n  let { posts, loading } = props;\r\n\r\n  useEffect(() => {\r\n    if (id == null) return;\r\n    if (posts.length === 0) return;\r\n\r\n    let matchingPost = posts.find((post) => post._id === id);\r\n    if (matchingPost == null) return (window.location.hash = '#/');\r\n    setPost(matchingPost);\r\n\r\n    let parsedJSON = JSON.parse(matchingPost.json);\r\n    setConverted(sanitizer(convertToHTML(parsedJSON.blocks)));\r\n\r\n    getComments(id)\r\n      .then((newComments) => {\r\n        setComments(newComments.data);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 404) return;\r\n      });\r\n  }, [id, posts]);\r\n\r\n  return (\r\n    <Container className=\"d-flex justify-content-center\" fluid>\r\n      {post ? (\r\n        <div className=\"post mt-4\">\r\n          <h1>{post.title}</h1>\r\n          <p className=\"text-muted\">\r\n            {new Date(post.createdAt).toLocaleDateString()}\r\n          </p>\r\n          <div\r\n            className=\"post-content\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: converted,\r\n            }}\r\n          ></div>\r\n          <section className=\"comments my-5 pt-3 border-top\">\r\n            <header>\r\n              <h2>Comments</h2>\r\n            </header>\r\n            <Button\r\n              onClick={() => {\r\n                setShowForm(!showForm);\r\n              }}\r\n              className=\"new-comment-btn my-3\"\r\n            >\r\n              New Comment\r\n            </Button>\r\n            {showForm && <CommentForm id={id} />}\r\n            <div>\r\n              {comments.length > 0 &&\r\n                comments.map((comment) => {\r\n                  return (\r\n                    <Card\r\n                      key={comment._id}\r\n                      className=\"post-summary my-3 w-100 position-relative\"\r\n                    >\r\n                      <Card.Body className=\"pb-4\">\r\n                        <Card.Title>{comment.owner}</Card.Title>\r\n                        {comment.text}\r\n                        <div className=\"text-muted position-absolute comment-time\">\r\n                          {new Date(comment.createdAt).toLocaleDateString()}\r\n                        </div>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  );\r\n                })}\r\n            </div>\r\n          </section>\r\n        </div>\r\n      ) : loading ? (\r\n        <div className=\"mt-4\">\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        <div className=\"mt-4\">Post was not found.</div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PostView;\r\n","import React from 'react';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction PostList(props) {\r\n  let { posts } = props;\r\n  return (\r\n    <>\r\n      {posts &&\r\n        posts.length > 0 &&\r\n        posts.map((post) => {\r\n          return (\r\n            <a\r\n              key={post._id}\r\n              className=\"text-reset post-link\"\r\n              href={`#/post/${post._id}`}\r\n            >\r\n              <Card className=\"post-summary my-3 mx-auto\">\r\n                <Card.Body>\r\n                  <Card.Title>{post.title}</Card.Title>\r\n                  <Card.Subtitle className=\"text-muted\">\r\n                    {new Date(post.createdAt).toLocaleDateString()}\r\n                  </Card.Subtitle>\r\n                </Card.Body>\r\n              </Card>\r\n            </a>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n","import React from 'react';\r\n\r\nimport PostList from '../components/PostList';\r\nimport Loader from '../components/Loader';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction HomeView(props) {\r\n  let { posts, loading } = props;\r\n  return (\r\n    <Container fluid>\r\n      <h1 className=\"text-center mt-3\">Home</h1>\r\n      <div className=\"posts-container d-flex flex-column align-items-center\">\r\n        {loading && (\r\n          <>\r\n            <div className=\"mt-4\">\r\n              <Loader />\r\n            </div>\r\n            <br />\r\n          </>\r\n        )}\r\n        {posts.length > 0 ? (\r\n          <PostList posts={posts} />\r\n        ) : loading ? (\r\n          ''\r\n        ) : (\r\n          'Nothing here yet!'\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HomeView;\r\n","import React from 'react';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction AboutView(props) {\r\n  return (\r\n    <Container className=\"text-center mt-3\" fluid>\r\n      <h1>About</h1>\r\n      <p>\r\n        Well, what can I say? This is a blog and we're in the summer\r\n        <br /> (yes, all year round😛)\r\n      </p>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AboutView;\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport { getPosts } from './util/apiOperations';\n\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\n\n//Pages\nimport PostView from './pages/PostView';\nimport HomeView from './pages/HomeView';\nimport AboutView from './pages/AboutView';\n\nfunction App() {\n  let [posts, setPosts] = useState([]);\n  let [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getPosts()\n      .then((newPosts) => {\n        setPosts(newPosts.data);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <HashRouter>\n      <Header className=\"bg-header\" />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route path=\"/home\" exact>\n          <HomeView posts={posts} loading={loading} />\n        </Route>\n        <Route path=\"/about\" exact component={AboutView} />\n        <Route path=\"/post/:id\" exact>\n          <PostView posts={posts} loading={loading} />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './main.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}